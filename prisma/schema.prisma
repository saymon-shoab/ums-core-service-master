// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AcademicSemester {
  id String @id @default(uuid())
  year Int
  title String
  code String
  startMonth String
  endMonth String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  students Student[]
  @@map("academic_semester")
}

model AcademicFaculty {
  id String @id @default(uuid())
  title String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  academicDepartments AcademicDepartment[]
  students Student[]
  faculties faculty[]
  @@map("academic_faculty")
}

model AcademicDepartment {
  id String @id @default(uuid())
  title String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  academicFaculty AcademicFaculty @relation(fields: [academicFacultyId],references: [id])
  academicFacultyId String
  students Student[]
  faculties faculty[]
  @@map("academic_department")
}

model Student {
  id String @id @default(uuid())
  studentId String
  firstName String
  lastName String
  middleName String
  profileImage String
  email String
  contactNo String
  gender String
  blodGroup String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  academicSemester AcademicSemester @relation(fields: [academicSemesterId],references: [id])
  academicSemesterId String
  academicDepartment AcademicDepartment @relation(fields: [academicDepartmentId],references: [id])
  academicDepartmentId String
  academicFaculty AcademicFaculty @relation(fields: [academicFacultyId], references: [id])
  academicFacultyId String
  @@map("students")
}

model faculty {
  id String @id @default(uuid())
  facultyId String
  firstName String
  lastName String
  middleName String
  profileImage String
  email String
  contactNo String
  gender String
  blodGroup String
  designation String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  academicDepartment AcademicDepartment @relation(fields: [academicDepartmentId],references: [id])
  academicDepartmentId String
  academicFaculty AcademicFaculty @relation(fields: [academicFacultyId], references: [id])
  academicFacultyId String
  @@map("faculties")
}